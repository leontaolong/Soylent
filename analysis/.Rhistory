library(tidyverse)
library("tidyverse")
ggplot(mapping=aes(x=probability))+
geom_bar(data=with.replace.dataset, fill="red", binwidth=0.1)+
geom_bar(data=without.replace.dataset, fill="blue", binwidth=0.1)
ggplot2(mapping=aes(x=probability))+
geom_bar(data=with.replace.dataset, fill="red", binwidth=0.1)+
geom_bar(data=without.replace.dataset, fill="blue", binwidth=0.1)
install.packages("ggplot2", dep=TRUE)
install.packages("ggplot2", dep = TRUE)
library(ggplot2)
ggplot(mapping=aes(x=probability))+
geom_bar(data=with.replace.dataset, fill="red", binwidth=0.1)+
geom_bar(data=without.replace.dataset, fill="blue", binwidth=0.1)
ggplot(mapping=aes(x=probability))+
geom_bar(data=with.replace.dataset, fill="red")+
geom_bar(data=without.replace.dataset, fill="blue")
ggplot() +
geom_line(data=with.replace.dataset, colour="red", size=1.5) +
geom_point(data=with.replace.dataset, colour="red", size=4, shape=21, fill="white") +
geom_line(data=without.replace.dataset, colour="blue", size=1.5) +
geom_point(data=without.replace.dataset, colour="blue", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, colour="red", size=1.5) +
geom_point(data=with.replace.dataset, colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, colour="red", size=1.5)
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white") +
geom_line(data=without.replace.dataset, colour="blue", size=1.5) +
geom_point(data=without.replace.dataset, colour="blue", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white") +
geom_line(data=without.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="blue", size=1.5) +
geom_point(data=without.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="blue", size=4, shape=21, fill="white")
View(with.replace.dataset)
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms/10, y=probability), colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms/10, y=probability), colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), linetype="dashed", colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white")
ggplot() +
geom_line(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), linetype="dashed", colour="red", size=1.5) +
geom_point(data=with.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="red", size=4, shape=21, fill="white") +
geom_line(data=without.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="blue", size=1.5) +
geom_point(data=without.replace.dataset, aes(x=Total.M.Ms, y=probability), colour="blue", size=4, shape=21, fill="white")
ggplot(aes(x=Total.M.Ms, y=probability, group=1)) +
geom_line(data=with.replace.dataset, linetype="dashed", colour="red", size=1.5) +
geom_point(data=with.replace.dataset, colour="red", size=4, shape=21, fill="white") +
geom_line(data=without.replace.dataset, colour="blue", size=1.5) +
geom_point(data=without.replace.dataset, colour="blue", size=4, shape=21, fill="white")
ggplot(with.replace.dataset,aes(Total.M.Ms, probability)) + geom_point() +geom_point(data=without.replace.dataset,colour='red') + xlim(0, 10)
ggplot(with.replace.dataset,aes(Total.M.Ms, probability)) + geom_point() +geom_point(data=without.replace.dataset,colour='red')
ggplot(with.replace.dataset,aes(Total.M.Ms, probability)) + geom_point() +geom_point(data=without.replace.dataset,colour='red') + xlim(20, 2000)
view(with.replace.dataset)
with.replace.dataset
without.replace.dataset
ggplot(with.replace.dataset,aes(Total.M.Ms, probability)) + geom_point() +geom_point(data=without.replace.dataset,colour='red')
is.data.frame(with.replace.dataset)
ggplot(data=with.replace.dataset,aes(Total.M.Ms, probability)) + geom_point() +geom_point(data=without.replace.dataset,colour='red')
ggplot(data=with.replace.dataset,aes(Total.M.Ms, probability, group=1)) + geom_point() +geom_point(data=without.replace.dataset,colour='red')
ggplot(data=with.replace.dataset,aes(Total.M.Ms, probability, group=1)) + geom_point() +geom_point(data=without.replace.dataset,colour='red')
ggplot(data=with.replace.dataset,aes(x=Total.M.Ms, y=probability, group=1)) + geom_point() +geom_point(data=without.replace.dataset,colour='red')
ggplot(data=with.replace.dataset,aes(x=Total.M.Ms, y=probability, group=1)) + geom_point() +geom_line() +geom_point(data=without.replace.dataset,colour='red')
ggplot(data=with.replace.dataset,aes(x=Total.M.Ms, y=probability, group=1)) + geom_point() +geom_line() +geom_point(data=without.replace.dataset,colour='red')+geom_line()
ggplot(data=with.replace.dataset,aes(x=Total.M.Ms, y=probability, group=1)) + geom_point() +geom_line() +geom_point(data=without.replace.dataset,colour='red')+geom_line(aes(x=Total.M.Ms, y=probability, group=1))
ggplot(data=with.replace.dataset,aes(x=Total.M.Ms, y=probability, group=1)) + geom_point() +geom_line() +geom_point(data=without.replace.dataset,colour='red')+geom_line(group=1)
ggplot(data=with.replace.dataset,aes(x=Total.M.Ms, y=probability, group=1)) + geom_point() +geom_line() +geom_point(data=without.replace.dataset,colour='red',group=1)+geom_line()
A = data.frame(x = rnorm(10),y=rnorm(10))
B = data.frame(x = rnorm(10),y=rnorm(10))
ggplot(A,aes(x,y)) +geom_point() +geom_point(data=B,colour='red') + xlim(0, 10)
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "red") +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "blue") +
xlab('data_date') +
ylab('percent.change')
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "red") +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "blue") +
xlab('Size') +
ylab('Probability')
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "red") +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "blue") +
xlab('Population Size') +
ylab('Probability')
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = variable) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = variable) +
xlab('Population Size') +
ylab('Probability') +
scale_colour_manual(values=c("red","blue"))
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "RED") +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, group=1), color = "BLUE") +
xlab('Population Size') +
ylab('Probability') +
scale_colour_manual("",
breaks = c("RED", "BLUE"),
values = c("red", "blue"))
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison")
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Y series", labels = c("with replacement", "without replacement"))
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
vector.probabilities <- pnorm(q, mean = 1000, sd = 150, lower.tail = TRUE, log.p = FALSE)
vector.probabilities <- pnorm(1.96, mean = 1000, sd = 150, lower.tail = TRUE, log.p = FALSE)
vector.probabilities
plot(vector.probabilities, col="darkorange", xlab="", ylab="Cumulative Probability",type="l",lwd=2, cex=2, main="CDF of Standard Normal", cex.axis=.8)
plot(1.96, vector.probabilities, col="darkorange", xlab="", ylab="Cumulative Probability",type="l",lwd=2, cex=2, main="CDF of Standard Normal", cex.axis=.8)
set.seed(3000)
xseq<-seq(-3000,3000,.01)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150, lower.tail = TRUE, log.p = FALSE)
plot(xseq, vector.probabilities, col="darkorange", xlab="", ylab="Cumulative Probability",type="l",lwd=2, cex=2, main="CDF of Standard Normal", cex.axis=.8)
set.seed(3000)
xseq<-seq(-3000,3000)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150, lower.tail = TRUE, log.p = FALSE)
plot(xseq, vector.probabilities, col="darkorange", xlab="", ylab="Cumulative Probability",type="l",lwd=2, cex=2, main="CDF of Standard Normal", cex.axis=.8)
set.seed(3000)
xseq<-seq(-3000,3000)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150, lower.tail = TRUE, log.p = FALSE)
plot(xseq, vector.probabilities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
set.seed(3000)
xseq<-seq(-4,4)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150, lower.tail = TRUE, log.p = FALSE)
plot(xseq, vector.probabilities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
set.seed(3000)
xseq<-seq(-3000,3000)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150)
plot(xseq, vector.probabilities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
xseq<-seq(-3000,3000)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150)
plot(xseq, vector.probabilities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
xseq<-seq(-3000,3000)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150)
plot(xseq, vector.probabilities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
growth = c("Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter")
mm.proportion = c("Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter")
pattern = c("Triple Chocolate", "Triple Chocolate")
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
for (i in 1:1000) {
pick.mm1 <- sample(mm.proportion, 2, replace = TRUE)
pick.mm2 = sample(mm.proportion, 2, replace = FALSE)
if (i == 1) {
dataset.temp1 = pick.mm1
dataset.temp2 = pick.mm2
} else {
dataset.temp1 = rbind(dataset.temp1, pick.mm1)
dataset.temp2 = rbind(dataset.temp2, pick.mm2)
}
}
matched.rows1 = which(apply(dataset.temp1, 1, function(x) all(x == pattern)))
matched.rows2 = which(apply(dataset.temp2, 1, function(x) all(x == pattern)))
num.col1 = length(matched.rows1)
num.col2 = length(matched.rows2)
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), num.col1/100)
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), num.col2/100)
mm.proportion = rbind(mm.proportion, growth)
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
for (i in 1:100) {
for (i in 1:10000) {
pick.mm1 <- sample(mm.proportion, 2, replace = TRUE)
pick.mm2 = sample(mm.proportion, 2, replace = FALSE)
if (i == 1) {
dataset.temp1 = pick.mm1
dataset.temp2 = pick.mm2
} else {
dataset.temp1 = rbind(dataset.temp1, pick.mm1)
dataset.temp2 = rbind(dataset.temp2, pick.mm2)
}
}
matched.rows1 = which(apply(dataset.temp1, 1, function(x) all(x == pattern)))
matched.rows2 = which(apply(dataset.temp2, 1, function(x) all(x == pattern)))
num.col1 = length(matched.rows1)
num.col2 = length(matched.rows2)
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), num.col1/100)
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), num.col2/100)
mm.proportion = rbind(mm.proportion, growth)
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
growth = c("Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter")
mm.proportion = c("Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate", "Triple Chocolate",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter",
"Peanut Butter", "Peanut Butter", "Peanut Butter", "Peanut Butter")
pattern = c("Triple Chocolate", "Triple Chocolate")
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
for (i in 1:10000) {
pick.mm1 <- sample(mm.proportion, 2, replace = TRUE)
pick.mm2 = sample(mm.proportion, 2, replace = FALSE)
if (i == 1) {
dataset.temp1 = pick.mm1
dataset.temp2 = pick.mm2
} else {
dataset.temp1 = rbind(dataset.temp1, pick.mm1)
dataset.temp2 = rbind(dataset.temp2, pick.mm2)
}
}
matched.rows1 = which(apply(dataset.temp1, 1, function(x) all(x == pattern)))
matched.rows2 = which(apply(dataset.temp2, 1, function(x) all(x == pattern)))
num.col1 = length(matched.rows1)
num.col2 = length(matched.rows2)
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), num.col1/100)
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), num.col2/100)
mm.proportion = rbind(mm.proportion, growth)
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), (1/2 * 1/2))
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), (1/2 * (step/2-1)/(step-1)))
mm.proportion = rbind(mm.proportion, growth)
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
View(with.replace.dataset)
View(without.replace.dataset)
View(without.replace.dataset)
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), round((1/2 * 1/2), digits=4))
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), round((1/2 * (step/2-1)/(step-1))), digits=4)
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), (1/2 * 1/2))
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), round((1/2 * (step/2-1)/(step-1))), digits=4)
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
with.replace.dataset
without.replace.dataset
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), (1/2 * 1/2))
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), round((1/2 * (step/2-1)/(step-1)), digits=4))
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
without.replace.dataset
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step/20), (1/2 * 1/2))
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step/20), round((1/2 * (step/2-1)/(step-1)), digits=4))
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=Total.M.Ms, y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step/20), (1/2 * 1/2))
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step/20), round((1/2 * (step/2-1)/(step-1)), digits=4))
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=seq(1:100), y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=seq(1:100), y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
with.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
without.replace.dataset = data.frame("Total M&Ms" = character(), "probability" = integer(), stringsAsFactors=FALSE)
step = 20
for (i in 1:100) {
with.replace.dataset[nrow(with.replace.dataset) + 1, ] <- c(toString(step), (1/2 * 1/2))
without.replace.dataset[nrow(without.replace.dataset) + 1, ] <- c(toString(step), round((1/2 * (step/2-1)/(step-1)), digits=4))
step = step + 20
}
ggplot() +
geom_line(data = with.replace.dataset, aes(x=seq(1:100), y=probability, color = "red", group=1) ) +
geom_line(data = without.replace.dataset, aes(x=seq(1:100), y=probability, color = "blue", group=1)) +
xlab('Population Size') +
ylab('Probability') +
labs(title="Probablity Comparison of With and Without Replacement") +
scale_color_discrete(name = "Legend", labels = c("with replacement", "without replacement"))
library(ggplot2)
xseq<-seq(-3000,3000)
vector.probabilities <- dnorm(xseq, mean = 1000, sd = 150)
plot(xseq, vector.probabilities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
z.score <- (1068 - 1000) / 150
z.score
percentage <- pnorm(1068, 1000, 150)
percentage
writing.dataset <- read.csv("paperNinja.csv")
writing.dataset <- read.csv("/paperNinja.csv")
writing.dataset <- read.csv("paperNinja.csv")
install.packages("deldir", dependencies=TRUE)
library(deldir)
# Generate points
x <- subway.data$Station.Longitude
y <- subway.data$Station.Latitude
# Calculate tesslation
vtess <- deldir(x, y)
# Voronoi
plot(x, y, type="n", asp=1)
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1)
vtess <- deldir(x, y)
subway.data <- read.csv("cleanedSubwayData.csv")
#create the subway station map
new.york.subway <- get_map("New York, USA", zoom=10)
subway.plot <- ggmap(new.york.subway) +
geom_point(data=subway.data, aes(x=Station.Longitude, y=Station.Latitude), color="black", size=1) +
ggtitle("Subways in New York")
library(ggplot2)
library(ggmap)
library(dplyr)
subway.data <- read.csv("cleanedSubwayData.csv")
#create the subway station map
new.york.subway <- get_map("New York, USA", zoom=10)
subway.plot <- ggmap(new.york.subway) +
geom_point(data=subway.data, aes(x=Station.Longitude, y=Station.Latitude), color="black", size=1) +
ggtitle("Subways in New York")
setwd("C:/Christie/INFO370/prelim analysis")
subway.data <- read.csv("cleanedSubwayData.csv")
#create the subway station map
new.york.subway <- get_map("New York, USA", zoom=10)
subway.plot <- ggmap(new.york.subway) +
geom_point(data=subway.data, aes(x=Station.Longitude, y=Station.Latitude), color="black", size=1) +
ggtitle("Subways in New York")
# Generate points
x <- subway.data$Station.Longitude
y <- subway.data$Station.Latitude
# Calculate tesslation
vtess <- deldir(x, y)
# Voronoi
plot(x, y, type="n", asp=1)
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1)
vtess <- deldir(x, y)
# Voronoi
plot(x, y, type="n", asp=1)
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1) +
main = "Voronoi Diagram of Subway Stations" +
xlab = "Longitude" +
ylab = "Latitude"
# Generate points
x <- subway.data$Station.Longitude
y <- subway.data$Station.Latitude
# Calculate tesslation
vtess <- deldir(x, y)
# Voronoi
plot(x, y, type="n", asp=1)
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1) +
main = "Voronoi Diagram of Subway Stations" +
xlab = "Longitude" +
ylab = "Latitude"
vtess <- deldir(x, y)
# Voronoi
plot(x, y, type="n", asp=1)
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1, +
main = "Voronoi Diagram of Subway Stations" +
xlab = "Longitude" +
ylab = "Latitude")
# Calculate tesslation
vtess <- deldir(x, y)
# Voronoi
plot(x, y, type="n", asp=1)
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1)
vtess <- deldir(x, y)
# Voronoi
plot(x, y, type="n", asp=1)
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1 +
main = "Voronoi Diagram of Subway Stations" +
xlab = "Longitude" +
ylab = "Latitude")
plot(x, y, type="n", asp=1,
main = "Voronoi Diagram of Subway Stations",
xlab = "Longitude",
ylab = "Latitude")
points(x, y, pch=20, col="red", cex=0.5)
plot(vtess, wlines="tess", wpoints="none", number=FALSE, add=TRUE, lty=1)
